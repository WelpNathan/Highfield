@page
@model InvigilatorModel
@{
    ViewData["Title"] = "Logged In - Invigilator";
    ViewData["firstName"] = "Name"; //pull name from Db from logged in user

}

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] </title>

</head>

<body onload="firstLoad()">
    <div class="mainContent">

        <h2>Welcome @ViewData["firstName"]</h2>

        <div class="tableSection1">
            <h3>List of ready learners</h3>
            <table id="activeLearners">
            </table>
        </div>

        <!-- myList[] array created with id's of chosen students (if none selected, = 0's) -->
        <div class="tableSection2">
            <h3>My Observation List</h3>
            <table id="myLearners">
                <tr>
                    <th>Remove</th>
                    <th>Student Name</th>
                    <th>Time Logged In</th>
                </tr>
            </table>
            <!-- Arrows: on click - set specific array value to 0. -->
        </div>

        <div class="actionBtn">    
            <button class="startBtn" onclick="startInvig()">Start Invigilation</button>
        </div>         



    </div>

</body>

<script>
    function moveLearner(id) {
        //grabs the two tables
        var table = document.getElementById("myLearners");
        var table2 = document.getElementById("activeLearners");
        var noRows = table.getElementsByTagName('tr').length;
        if (noRows < 5) {
            //adds item from left table to right
            var name = document.getElementById(id);
            var cells = name.getElementsByTagName("td");
            var row = table.insertRow(1);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            cell2.parentNode.id = id;
            cell1.innerHTML = '<button class="fas fa-arrow-alt-circle-left" type="button" onClick="moveLearnerBack(' + "'" + id + "'" + ')"></button>';
            cell2.innerHTML = cells[0].innerText;
            cell3.innerHTML = cells[1].innerText;

            //I don't like javascript...

            //removes item from left side

            var index = name.rowIndex;
            table2.deleteRow(index);
        }
        else {
            alert("You can only select 4 learners");
        }
    }



    function moveLearnerBack(id) {
        var table = document.getElementById("activeLearners");
        var name = document.getElementById(id);
        var cells = name.getElementsByTagName("td");
        var row = table.insertRow(1);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        cell1.innerHTML = cells[1].innerHTML;
        cell1.parentNode.id = id;
        cell3.innerHTML = '<button class="fas fa-arrow-alt-circle-right" type="button" onClick="moveLearner(' + "'" + id + "'" + ')"></button>';
        cell2.innerHTML = cells[2].innerText;



        var table2 = document.getElementById("myLearners");
        var index = name.rowIndex;
        table2.deleteRow(index);
    }

    function startInvig() {
        var table = document.getElementById("myLearners");
        var tempIds = table.getElementsByTagName("tr");
        var ids = [];
        for (var i = 1; i < tempIds.length; i++) {
            ids.push(tempIds[i].id)
        }

        var myJSON = JSON.stringify(ids);

        $.ajax({
            type: 'POST',
            contentType: 'application/x-www-form-urlencoded',
            url: "/LoggedIn/Invigilator?handler=Selected",
            data: {ids : myJSON},
            headers: {
                RequestVerificationToken: gettoken()
            },
            success: function () {
                window.open("exam", '_self');
            }
        })
        //sleep(100);
        
    }

    function gettoken() {
        var token = '@Html.AntiForgeryToken()';
        token = $(token).val();
        return token;
   }


    function sleep(milliseconds) {
        const date = Date.now();
        let currentDate = null;
        do {
            currentDate = Date.now();
        } while (currentDate - date < milliseconds);
    }



</script>